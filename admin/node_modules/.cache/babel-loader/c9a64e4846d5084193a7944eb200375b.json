{"ast":null,"code":"import axios from \"axios\";\nimport { getListsStart } from \"./ListActions\";\nexport const getLists = async dispatch => {\n  dispatch(getListsStart());\n  try {\n    const res = await axios.get(\"/api/lists\", {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    });\n    dispatch(getListsSuccess(res.data));\n  } catch (err) {\n    dispatch(getListsFailure());\n  }\n};\n\n//create\nexport const createMovie = async (movie, dispatch) => {\n  dispatch(createMovieStart());\n  try {\n    const res = await axios.post(\"/api/movies\", movie, {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    });\n    dispatch(createMovieSuccess(res.data));\n  } catch (err) {\n    dispatch(createMovieFailure());\n  }\n};\n\n//delete\n// export const deleteMovie = async (id, dispatch) => {\n//     dispatch(deleteMovieStart());\n//     try {\n//         await axios.delete(\"/api/movies/\" + id, {\n//             headers: {\n//                 token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\n//             },\n//         });\n//         dispatch(deleteMovieSuccess(id));\n//     } catch (err) {\n//         dispatch(deleteMovieFailure());\n//     }\n// };","map":{"version":3,"names":["axios","getListsStart","getLists","dispatch","res","get","headers","token","JSON","parse","localStorage","getItem","accessToken","getListsSuccess","data","err","getListsFailure","createMovie","movie","createMovieStart","post","createMovieSuccess","createMovieFailure"],"sources":["/Users/nova/Desktop/MERN-netflix/admin/src/context/listContext/apiCalls.js"],"sourcesContent":["import axios from \"axios\";\nimport {\n    getListsStart\n} from \"./ListActions\";\n\nexport const getLists = async (dispatch) => {\n    dispatch(getListsStart());\n    try {\n        const res = await axios.get(\"/api/lists\", {\n            headers: {\n                token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\n            },\n        });\n        dispatch(getListsSuccess(res.data));\n    } catch (err) {\n        dispatch(getListsFailure());\n    }\n};\n\n//create\nexport const createMovie = async (movie, dispatch) => {\n    dispatch(createMovieStart());\n    try {\n        const res = await axios.post(\"/api/movies\", movie, {\n            headers: {\n                token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\n            },\n        });\n        dispatch(createMovieSuccess(res.data));\n    } catch (err) {\n        dispatch(createMovieFailure());\n    }\n};\n\n//delete\n// export const deleteMovie = async (id, dispatch) => {\n//     dispatch(deleteMovieStart());\n//     try {\n//         await axios.delete(\"/api/movies/\" + id, {\n//             headers: {\n//                 token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\n//             },\n//         });\n//         dispatch(deleteMovieSuccess(id));\n//     } catch (err) {\n//         dispatch(deleteMovieFailure());\n//     }\n// };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACIC,aAAa,QACV,eAAe;AAEtB,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EACxCA,QAAQ,CAACF,aAAa,CAAC,CAAC,CAAC;EACzB,IAAI;IACA,MAAMG,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,YAAY,EAAE;MACtCC,OAAO,EAAE;QACLC,KAAK,EAAE,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACC;MAChE;IACJ,CAAC,CAAC;IACFT,QAAQ,CAACU,eAAe,CAACT,GAAG,CAACU,IAAI,CAAC,CAAC;EACvC,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVZ,QAAQ,CAACa,eAAe,CAAC,CAAC,CAAC;EAC/B;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOC,KAAK,EAAEf,QAAQ,KAAK;EAClDA,QAAQ,CAACgB,gBAAgB,CAAC,CAAC,CAAC;EAC5B,IAAI;IACA,MAAMf,GAAG,GAAG,MAAMJ,KAAK,CAACoB,IAAI,CAAC,aAAa,EAAEF,KAAK,EAAE;MAC/CZ,OAAO,EAAE;QACLC,KAAK,EAAE,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACC;MAChE;IACJ,CAAC,CAAC;IACFT,QAAQ,CAACkB,kBAAkB,CAACjB,GAAG,CAACU,IAAI,CAAC,CAAC;EAC1C,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVZ,QAAQ,CAACmB,kBAAkB,CAAC,CAAC,CAAC;EAClC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}