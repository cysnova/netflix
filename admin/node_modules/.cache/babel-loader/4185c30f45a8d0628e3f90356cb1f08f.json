{"ast":null,"code":"const MovieReducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_MOVIES_START\":\n      return {\n        movies: [],\n        isFetching: true,\n        error: false\n      };\n    case \"GET_MOVIES_SUCCESS\":\n      return {\n        movies: action.payload,\n        isFetching: false,\n        error: false\n      };\n    case \"GET_MOVIES_FAILURE\":\n      return {\n        movies: [],\n        isFetching: false,\n        error: true\n      };\n    case \"CREATE_MOVIE_START\":\n      return {\n        ...state,\n        isFetching: true,\n        error: false\n      };\n    case \"CREATE_MOVIE_SUCCESS\":\n      return {\n        movies: [...state.movies, action.payload],\n        isFetching: false,\n        error: false\n      };\n    case \"CREATE_MOVIE_FAILURE\":\n      return {\n        ...state,\n        isFetching: false,\n        error: true\n      };\n    case \"UPLOAD_MOVIE_START\":\n      return {\n        ...state,\n        isFetching: true,\n        error: false\n      };\n    case \"UPLOAD_MOVIE_SUCCESS\":\n      return {\n        movies: state.movies.map(movie => movie._id === action.payload._id && action.payload),\n        isFetching: false,\n        error: false\n      };\n    case \"UPLOAD_MOVIE_FAILURE\":\n      return {\n        ...state,\n        isFetching: false,\n        error: true\n      };\n    case \"DELETE_MOVIE_START\":\n      return {\n        ...state,\n        isFetching: true,\n        error: false\n      };\n    case \"DELETE_MOVIE_SUCCESS\":\n      return {\n        movies: state.movies.filter(movie => movie._id !== action.payload),\n        isFetching: false,\n        error: false\n      };\n    case \"DELETE_MOVIE_FAILURE\":\n      return {\n        ...state,\n        isFetching: false,\n        error: true\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\n_c = MovieReducer;\nexport default MovieReducer;\nvar _c;\n$RefreshReg$(_c, \"MovieReducer\");","map":{"version":3,"names":["MovieReducer","state","action","type","movies","isFetching","error","payload","map","movie","_id","filter","_c","$RefreshReg$"],"sources":["/Users/nova/Desktop/MERN-netflix/admin/src/context/movieContext/MovieReducer.js"],"sourcesContent":["const MovieReducer = (state, action) => {\n    switch (action.type) {\n        case \"GET_MOVIES_START\":\n            return {\n                movies: [],\n                isFetching: true,\n                error: false,\n            };\n        case \"GET_MOVIES_SUCCESS\":\n            return {\n                movies: action.payload,\n                isFetching: false,\n                error: false,\n            };\n        case \"GET_MOVIES_FAILURE\":\n            return {\n                movies: [],\n                isFetching: false,\n                error: true,\n            };\n        case \"CREATE_MOVIE_START\":\n            return {\n                ...state,\n                isFetching: true,\n                error: false,\n            };\n        case \"CREATE_MOVIE_SUCCESS\":\n            return {\n                movies: [...state.movies, action.payload],\n                isFetching: false,\n                error: false,\n            };\n        case \"CREATE_MOVIE_FAILURE\":\n            return {\n                ...state,\n                isFetching: false,\n                error: true,\n            };\n        case \"UPLOAD_MOVIE_START\":\n            return {\n                ...state,\n                isFetching: true,\n                error: false,\n            };\n        case \"UPLOAD_MOVIE_SUCCESS\":\n            return {\n                movies: state.movies.map(\n                    (movie) => movie._id === action.payload._id && action.payload\n                ),\n                isFetching: false,\n                error: false,\n            };\n        case \"UPLOAD_MOVIE_FAILURE\":\n            return {\n                ...state,\n                isFetching: false,\n                error: true,\n            };\n        case \"DELETE_MOVIE_START\":\n            return {\n                ...state,\n                isFetching: true,\n                error: false,\n            };\n        case \"DELETE_MOVIE_SUCCESS\":\n            return {\n                movies: state.movies.filter((movie) => movie._id !== action.payload),\n                isFetching: false,\n                error: false,\n            };\n        case \"DELETE_MOVIE_FAILURE\":\n            return {\n                ...state,\n                isFetching: false,\n                error: true,\n            };\n        default:\n            return { ...state };\n    }\n};\n\nexport default MovieReducer;"],"mappings":"AAAA,MAAMA,YAAY,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACpC,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,kBAAkB;MACnB,OAAO;QACHC,MAAM,EAAE,EAAE;QACVC,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE;MACX,CAAC;IACL,KAAK,oBAAoB;MACrB,OAAO;QACHF,MAAM,EAAEF,MAAM,CAACK,OAAO;QACtBF,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACX,CAAC;IACL,KAAK,oBAAoB;MACrB,OAAO;QACHF,MAAM,EAAE,EAAE;QACVC,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACX,CAAC;IACL,KAAK,oBAAoB;MACrB,OAAO;QACH,GAAGL,KAAK;QACRI,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE;MACX,CAAC;IACL,KAAK,sBAAsB;MACvB,OAAO;QACHF,MAAM,EAAE,CAAC,GAAGH,KAAK,CAACG,MAAM,EAAEF,MAAM,CAACK,OAAO,CAAC;QACzCF,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACX,CAAC;IACL,KAAK,sBAAsB;MACvB,OAAO;QACH,GAAGL,KAAK;QACRI,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACX,CAAC;IACL,KAAK,oBAAoB;MACrB,OAAO;QACH,GAAGL,KAAK;QACRI,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE;MACX,CAAC;IACL,KAAK,sBAAsB;MACvB,OAAO;QACHF,MAAM,EAAEH,KAAK,CAACG,MAAM,CAACI,GAAG,CACnBC,KAAK,IAAKA,KAAK,CAACC,GAAG,KAAKR,MAAM,CAACK,OAAO,CAACG,GAAG,IAAIR,MAAM,CAACK,OAC1D,CAAC;QACDF,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACX,CAAC;IACL,KAAK,sBAAsB;MACvB,OAAO;QACH,GAAGL,KAAK;QACRI,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACX,CAAC;IACL,KAAK,oBAAoB;MACrB,OAAO;QACH,GAAGL,KAAK;QACRI,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE;MACX,CAAC;IACL,KAAK,sBAAsB;MACvB,OAAO;QACHF,MAAM,EAAEH,KAAK,CAACG,MAAM,CAACO,MAAM,CAAEF,KAAK,IAAKA,KAAK,CAACC,GAAG,KAAKR,MAAM,CAACK,OAAO,CAAC;QACpEF,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACX,CAAC;IACL,KAAK,sBAAsB;MACvB,OAAO;QACH,GAAGL,KAAK;QACRI,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACX,CAAC;IACL;MACI,OAAO;QAAE,GAAGL;MAAM,CAAC;EAC3B;AACJ,CAAC;AAACW,EAAA,GA/EIZ,YAAY;AAiFlB,eAAeA,YAAY;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}